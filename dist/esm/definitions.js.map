{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface PermissionStatus {\n  granted: boolean;\n}\n\nexport interface Contact {\n  contactId: string;\n  displayName?: string;\n  phoneNumbers: PhoneNumber[];\n  emails: EmailAddress[];\n  photoThumbnail?: string;\n  organizationName?: string;\n  organizationRole?: string;\n  birthday?: string;\n}\nexport interface Group {\n  groupId: string;\n  accountType?: string;\n  accountName: string;\n  title: string;\n}\n\nexport interface PhoneNumber {\n  label?: string;\n  number?: string;\n}\n\nexport interface EmailAddress {\n  label?: string;\n  address?: string;\n}\n\nexport interface ContactsPlugin {\n  checkPermissions(): Promise<PermissionStatus>;\n  // Deprecated\n  getPermissions(): Promise<PermissionStatus>;\n  requestPermissions(): Promise<PermissionStatus>;\n  getContacts(): Promise<{ contacts: Contact[]}>;\n  createContact(data: {name?: string, number: string}): Promise<void>;\n  addToExistingContact(data: {name?: string, number: string}): Promise<void>;\n  deleteContact(data: {contactId: string}): Promise<void>;\n  getGroups(): Promise<{ groups: Group[]}>;\n  getContactGroups(): Promise<{[key: string]: Group[]}>;\n}\n"]}